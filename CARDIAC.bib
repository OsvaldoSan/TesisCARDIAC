
@misc{stuart_cardiac_nodate,
	title = {{CARDIAC}},
	copyright = {Drexel University},
	url = {https://www.cs.drexel.edu/~bls96/museum/cardiac.html},
	urldate = {2021-09-18},
	author = {Stuart, Brian L.},
	file = {CARDIAC:/home/mrblue/Zotero/storage/P25MNNXK/cardiac.html:text/html},
}

@misc{noauthor_cardboard_2021,
	title = {{CARDboard} {Illustrative} {Aid} to {Computation}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=CARDboard_Illustrative_Aid_to_Computation&oldid=1058098526},
	abstract = {CARDIAC (CARDboard Illustrative Aid to Computation) is a learning aid developed by David Hagelbarger and Saul Fingerman for  Bell Telephone Laboratories in 1968 to teach high school students how computers work. The kit consists of an instruction manual and a die-cut cardboard "computer".
The computer "operates" by means of pencil and sliding cards. Any arithmetic is done in the head of the person operating the computer. The computer operates in base 10 and has 100 memory cells which can hold signed numbers from 0 to ±999. It has an instruction set of 10 instructions which allows CARDIAC to add, subtract, test, shift, input, output and jump.},
	language = {en},
	urldate = {2022-03-27},
	journal = {Wikipedia},
	month = dec,
	year = {2021},
	note = {Page Version ID: 1058098526},
	file = {Snapshot:/home/mrblue/Zotero/storage/ITM4VW27/CARDboard_Illustrative_Aid_to_Computation.html:text/html},
}

@misc{fingerman_instruction_1968,
	title = {An instruction manual for cardiac},
	url = {https://www.cs.drexel.edu/~bls96/museum/CARDIAC_manual.pdf},
	language = {English},
	publisher = {Bell Telephone Laboratories},
	author = {Fingerman, Saul and Hagelbarger, David},
	month = apr,
	year = {1968},
	file = {CARDIAC_Guide.pdf:/home/mrblue/Documents/Proyectos/Tesis_MAC/Documentación/Investigacion/Documentos/CARDIAC_Guide.pdf:application/pdf},
}

@misc{freiberger_history_nodate,
	title = {History of computing {\textbar}  {Britannica}},
	url = {https://www.britannica.com/technology/computer/History-of-computing},
	abstract = {Before 1970, computers were big machines requiring thousands of separate transistors. They were operated by specialized technicians, who often dressed in white lab coats and were commonly referred to as a computer priesthood. The machines were expensive and difficult to use. Few people came in direct contact with them, not even their programmers. The typical interaction was as follows: a programmer coded instructions and data on preformatted paper, a keypunch operator transferred the data onto punch cards, a computer operator fed the cards into a card reader, and the computer executed the instructions or stored the cards’ information for later},
	language = {en},
	urldate = {2022-07-01},
	author = {Freiberger, Paul A. and Swaine, MIchael R.},
	file = {Snapshot:/home/mrblue/Zotero/storage/2I84JQBR/Social-networking.html:text/html},
}

@misc{computer_history_museum_computer_2009,
	title = {Computer {Pioneers}: {Pioneer} {Computers} {Part} 1},
	shorttitle = {Computer {Pioneers}},
	url = {https://www.youtube.com/watch?v=qundvme1Tik},
	abstract = {[Recorded: 1996]
Part 1 of 2  The Dawn of Electronic Computing
1935  1945

Computer pioneer Gordon Bell hosts this two-part program on the evolution of electronic computing from its pre-World War II origins through the development of the first commercial computers. His narration traces the development of the stored program computer architecture which remains the foundation of todays modern computers.

In Part 1  The builders of the first five computer machines: the Bell Labs Model 1, the Zuse Z1-3, the Atanasoff-Berry Computer, the Harvard Mark 1 and the IBM SSEC tell their stories.

Catalog Number: 102645565
Lot Number: X3169.2005},
	urldate = {2022-07-01},
	author = {{Computer History Museum}},
	month = jul,
	year = {2009},
}

@misc{computer_history_museum_computer_2009-1,
	title = {Computer {Pioneers}: {Pioneer} {Computers} {Part} 2},
	shorttitle = {Computer {Pioneers}},
	url = {https://www.youtube.com/watch?v=wsirYCAocZk},
	abstract = {[Recorded: 1996]
Part 2 of 2  The First Computers, 1946 - 1950

Computer pioneer Gordon Bell hosts this two-part program on the evolution of electronic computing from its pre-World War II origins through the development of the first commercial computers. His narration traces the development of the stored program computer architecture which remains the foundation of todays modern computers.

In Part 1  The builders of the first five computer machines: the Bell Labs Model 1, the Zuse Z1-3, the Atanasoff-Berry Computer, the Harvard Mark 1 and the IBM SSEC tell their stories.

In Part 2  Vintage films and first hand accounts enliven the stories of the ENIAC and the three lines of computing machines descended from it: the Eckert-Mauchly EDVAC, BINAC and UNIVAC; Maurice Wilkes EDSAC; and John Von Neumanns IAS machines and their clones, the ILLIAC, MANIAC, etc.

Catalog Number: 102645566
Lot Number: X3169.2005},
	urldate = {2022-07-01},
	author = {{Computer History Museum}},
	month = jul,
	year = {2009},
}

@misc{computerphile_babbages_2016,
	title = {Babbage's {Analytical} {Engine} - {Computerphile}},
	url = {https://www.youtube.com/watch?v=5rtKoKFGFSM},
	abstract = {Charles Babbage's Analytical Engine was designed as the first Turing complete computer - before Turing was even born. Sadly it was never built. Professor Brailsford explains with the help of Sydney Padua's illustrations.

More of Sydney's work: http://bit.ly/1de83fM

The Professor's notes: http://www.eprg.org/computerphile/new... 

Analytical Engine project: http://bit.ly/Computerphile\_Plan28 
Lovelace Symposium : http://bit.ly/Computerphile\_LovelaceSymp  
Stephen Wolfram's Blog on Ada Lovelace: http://bit.ly/Computerphile\_Wolfram\_Ada 

Why use Binary? : https://www.youtube.com/watch?v=thrx3...
Turing Complete: https://youtu.be/RPQD7-AOjMI 
Sorting Secret: COMING SOON
Password Cracking: https://youtu.be/7U-RbOKanYs 
Slow Loris Attack: https://youtu.be/XiFkyR35v2Y
Quantum Computing 'Magic': https://youtu.be/BYx04e35Xso
Complete 'Babbage \& Lovelace' Playlist: https://www.youtube.com/playlist?list... 
Sixty Symbols - Ada's Tomb: https://youtu.be/OSQRTTuHLP8 
Undecidability Tangent: https://youtu.be/nsZsd5qtbo4 

http://www.facebook.com/computerphile
https://twitter.com/computer\_phile

This video was filmed and edited by Sean Riley.

Computer Science at the University of Nottingham: http://bit.ly/nottscomputer

Computerphile is a sister project to Brady Haran's Numberphile. More at http://www.bradyharan.com},
	urldate = {2022-07-01},
	author = {{Computerphile}},
	month = nov,
	year = {2016},
}

@book{silberschatz_operating_2009,
	address = {Hoboken, NJ},
	edition = {8th ed},
	title = {Operating system concepts},
	isbn = {978-0-470-27993-9 978-0-470-12872-5},
	publisher = {J. Wiley \& Sons},
	author = {Silberschatz, Abraham and Galvin, Peter B. and Gagne, Greg},
	year = {2009},
	keywords = {Operating systems (Computers)},
	file = {Silberschatz et al. - 2009 - Operating system concepts.pdf:/home/mrblue/Zotero/storage/7XQWQMZL/Silberschatz et al. - 2009 - Operating system concepts.pdf:application/pdf},
}

@book{tanenbaum_modern_2002,
	title = {Modern operating systems},
	isbn = {978-0-13-031358-4 978-7-111-09156-1},
	language = {English},
	author = {Tanenbaum, Andrew S},
	year = {2002},
	note = {OCLC: 981051666},
	file = {Andrew S. Tanenbaum, Herbert Bos - Modern Operating Systems-Pearson (2023).pdf:/home/mrblue/Documents/Proyectos/Tesis_MAC/Documentación/Investigacion/Documentos/Andrew S. Tanenbaum, Herbert Bos - Modern Operating Systems-Pearson (2023).pdf:application/pdf},
}

@misc{noauthor_operating_nodate,
	title = {Operating {System} {Tutorial}},
	url = {https://www.tutorialspoint.com/operating_system/index.htm},
	urldate = {2022-07-01},
	file = {Operating System Tutorial:/home/mrblue/Zotero/storage/BE6PSV5Y/index.html:text/html},
}

@book{null_essentials_2003,
	title = {The {Essentials} of {Computer} {Organization} and {Architecture}},
	isbn = {978-1-284-28463-8},
	abstract = {Essentials of Computer Organization and Architecture focuses on the function and design of the various components necessary to process information digitally. This title presents computing systems as a series of layers, taking a bottom–up approach by starting with low-level hardware and progressing to higher-level software. Its focus on real-world examples and practical applications encourages students to develop a “big-picture” understanding of how essential organization and architecture concepts are applied in the computing world. In addition to direct correlation with the ACM/IEEE guidelines for computer organization and architecture, the text exposes readers to the inner workings of a modern digital computer through an integrated presentation of fundamental concepts and principles.},
	language = {en},
	publisher = {Jones \& Bartlett Learning},
	author = {Null, Linda},
	year = {2003},
	note = {Google-Books-ID: c2K1EAAAQBAJ},
	keywords = {Computers / Software Development \& Engineering / General},
}

@article{null_mariesim_2003,
	title = {{MarieSim}: {The} {MARIE} computer simulator},
	volume = {3},
	issn = {1531-4278},
	shorttitle = {{MarieSim}},
	url = {https://doi.org/10.1145/982753.982754},
	doi = {10.1145/982753.982754},
	abstract = {MarieSim is a computer architecture simulator based on the MARIE architecture and designed to teach beginning computer organization and architecture. It provides users with interactive tools and simulations to help them deepen their understanding of the operation of a simple computer.Through interaction with MarieSim's graphical environment, students can observe how assembly language statements affect the registers and memory of a computer system. The graphical environment for MarieSim and the accompanying data path simulator are written in Java Swing; the integrated MARIE assembler is written in Java. The software has proven useful in introductory computer organization and architecture classes. Students find MarieSim very easy to use, and anecdotal results indicate increased architectural understanding. In this article we compare MarieSim to various existing systems and explore the software's features in detail.},
	number = {2},
	urldate = {2023-05-09},
	journal = {Journal on Educational Resources in Computing},
	author = {Null, Linda and Lobur, Julia},
	month = jun,
	year = {2003},
	keywords = {Computer architecture simulator, education, introductory architecture},
	pages = {1--es},
}

@article{alvaro_frias_retruco_2022,
	title = {Retruco: un intérprete para {TIMBA}},
	volume = {vol. 21, no. 1},
	copyright = {http://creativecommons.org/licenses/by/4.0/},
	issn = {1514-6774},
	shorttitle = {Retruco},
	url = {http://sedici.unlp.edu.ar/handle/10915/142866},
	abstract = {Presentamos Retruco, un intérprete para TIMBA (Terrible Imbecile Machine for Boring Algorithms); un lenguaje de programación creado en Argentina durante la década del 80 y que fuera utilizado en varios puntos del país, principalmente en materias de ciclo básico, o en los primeros años de una carrera en Ciencias de la Computación, como herramienta para presentar la programación estructurada. También analizamos herramientas similares a TIMBA. Se presenta una investigación respecto a las y los actores involucrados en su creación y quienes tuvieron contacto directo con el lenguaje, además del contexto previo a la creación del lenguaje, y su uso posterior.},
	language = {es},
	urldate = {2023-05-09},
	journal = {Electronic Journal of SADIO},
	author = {{Álvaro Frías}},
	month = jun,
	year = {2022},
	file = {Full Text PDF:/home/mrblue/Zotero/storage/2NNG2VFB/Frías Garay - 2022 - Retruco un intérprete para TIMBA.pdf:application/pdf},
}

@inproceedings{ajdari_design_2012,
	title = {Design and construction of an 8-bit computer, along with the design of its graphical simulator for pedagogical purposes},
	doi = {10.1109/ICL.2012.6402055},
	abstract = {In an introductory course of computer architecture, it is of high value that students use a simple and special CPU designed for this purpose and also its graphical simulator for better understanding of the computer hardware operation. In this paper, we present Abu-Reiahn, a simple 8-bit processor which we have specifically designed and built as the introduction part of computer architecture course to help students familiarize with hardware and software of a real CPU. Effective use of our computer graphical simulator along with the hardware allow the students to deepen their knowledge of logic circuits and the need for desired timing signals in a CPU to perform specific tasks.},
	booktitle = {2012 15th {International} {Conference} on {Interactive} {Collaborative} {Learning} ({ICL})},
	author = {Ajdari, Mohammadamin and Tabandeh, Mahmoud},
	month = sep,
	year = {2012},
	keywords = {Computer architecture, 8-bit processor, Abu-Reihan CPU, Central Processing Unit, Computational modeling, computer architecture, Computers, Educational institutions, graphical simulator, Hardware, Registers},
	pages = {1--5},
	file = {IEEE Xplore Abstract Record:/home/mrblue/Zotero/storage/DTHTX3GS/6402055.html:text/html},
}

@misc{noauthor_anexohistoria_2023,
	title = {Anexo:{Historia} de la computación},
	copyright = {Creative Commons Attribution-ShareAlike License},
	shorttitle = {Anexo},
	url = {https://es.wikipedia.org/w/index.php?title=Anexo:Historia_de_la_computaci%C3%B3n&oldid=151054828},
	abstract = {La computadora, computador u ordenador no es un invento de alguien en particular, sino el resultado evolutivo de ideas y realizaciones de muchas personas relacionadas con áreas tales como la electrónica, la mecánica, los materiales semiconductores, la lógica, el álgebra y la programación.},
	language = {es},
	urldate = {2023-05-12},
	journal = {Wikipedia, la enciclopedia libre},
	month = may,
	year = {2023},
	note = {Page Version ID: 151054828},
	file = {Snapshot:/home/mrblue/Zotero/storage/LP3MRPEW/AnexoHistoria_de_la_computación.html:text/html},
}

@inproceedings{ellard_design_2002,
	address = {Anchorage, Alaska},
	title = {On the design of a new {CPU} architecture for pedagogical purposes},
	isbn = {978-1-4503-4731-0},
	url = {http://dl.acm.org/citation.cfm?doid=1275462.1275471},
	doi = {10.1145/1275462.1275471},
	abstract = {Ant-32 is a new processor architecture designed speciﬁcally to address the pedagogical needs of teaching many subjects, including assembly language programming, machine architecture, compilers, operating systems, and VLSI design. This paper discusses our motivation for creating Ant-32 and the philosophy we used to guide our design decisions and gives a high-level description of the resulting design.},
	language = {en},
	urldate = {2023-06-01},
	booktitle = {Proceedings of the 2002 workshop on {Computer} architecture education {Held} in conjunction with the 29th {International} {Symposium} on {Computer} {Architecture} - {WCAE} '02},
	publisher = {ACM Press},
	author = {Ellard, Daniel and Holland, David and Murphy, Nicholas and Seltzer, Margo},
	year = {2002},
	pages = {6--es},
	file = {Ellard et al. - 2002 - On the design of a new CPU architecture for pedago.pdf:/home/mrblue/Zotero/storage/YMXWJI58/Ellard et al. - 2002 - On the design of a new CPU architecture for pedago.pdf:application/pdf},
}

@misc{magazine_gendered_nodate,
	title = {The {Gendered} {History} of {Human} {Computers}},
	url = {https://www.smithsonianmag.com/science-nature/history-human-computers-180972202/},
	abstract = {It's ironic that women today must fight for equality in Silicon Valley. After all, their math skills helped launch the digital age},
	language = {en},
	urldate = {2023-06-29},
	journal = {Smithsonian Magazine},
	author = {Magazine, Smithsonian and Thompson, Clive},
	note = {Section: Science, Women in Science, , Magazine, , Innovation, , History, , Articles},
	file = {Snapshot:/home/mrblue/Zotero/storage/DXR6BDF3/history-human-computers-180972202.html:text/html},
}

@phdthesis{andres_fernando_giraldo_sanchez_cognicion_2019,
	title = {Cognición, mecanismos y computación : una investigación sobre la filosofía de las explicaciones científicas de la mente / tesis que para optar por el grado de {Maestro} en {Filosofía} de la {Ciencia}},
	url = {https://eds.s.ebscohost.com/eds/detail/detail?vid=0&sid=4d16399f-50b5-438f-a91b-f4671e9f989c%40redis&bdata=Jmxhbmc9ZXMmc2l0ZT1lZHMtbGl2ZQ%3d%3d#AN=tes.TES01000798229&db=cat02029a},
	language = {Español},
	school = {Universidad Nacional Autónoma de México},
	author = {{Andrés Fernando Giraldo Sánchez}},
	collaborator = {{Nydia Lara Zavala}},
	year = {2019},
}

@book{taylor_scientific_1843,
	title = {Scientific {Memoirs}, {Selected} from the {Transactions} of {Foreign} {Academies} of {Science} and {Learned} {Societies}, and from {Foreign} {Journals}},
	url = {http://people.csail.mit.edu/brooks/idocs/Lovelace.pdf},
	language = {en},
	publisher = {R. and J. E. Taylor},
	author = {Taylor, Richard},
	year = {1843},
}

@misc{museo_torres_quevedo_ajedrecista_nodate,
	title = {El ajedrecista, el primer juego de ordenador de la historia},
	url = {https://artsandculture.google.com/story/el-ajedrecista-el-primer-juego-de-ordenador-de-la-historia/CQURBJHKlccLIA},
	abstract = {Uno de los inventos más futuristas y llamativos de Leonardo Torres Quevedo marcó el nacimiento de una nueva disciplina, la automática.},
	language = {es},
	urldate = {2023-07-30},
	journal = {Google Arts \& Culture},
	author = {{Museo Torres Quevedo}},
	file = {Snapshot:/home/mrblue/Zotero/storage/TN2RG8T5/CQURBJHKlccLIA.html:text/html},
}

@misc{att_tech_channel_att_2012,
	title = {{AT}\&{T} {Archives}: {The} {Thinking} {Machines} ({Bonus} {Edition})},
	shorttitle = {{AT}\&{T} {Archives}},
	url = {https://www.youtube.com/watch?v=clud9Il8DXU},
	abstract = {Introduction by George Kupczak of the AT\&T Archives and History Center 
 
This film, meant to be shown to high school students, uses the device of "computer vs. human" in the comparing of their thinking abilities, told through animation and live action. The animation is Jetsonian, the concepts a little ahead of their time. 
 
Though it's no Watson vs. Humans a la the 2011 Jeopardy! event (or even a Deep Blue vs. Kasparov contest), the basic principles in the film are still applicable today, even though much more sophisticated computer/software systems exist. 
 
Audience: high school students 
Produced by Bell Labs Film Unit 
 
Footage courtesy of AT\&T Archives and History Center, Warren, NJ},
	urldate = {2023-08-17},
	author = {{AT\&T Tech Channel}},
	month = mar,
	year = {2012},
}

@misc{megardi_cardiac_nodate,
	title = {{CARDIAC} ({CARDboard} {Illustrative} {Aid} to {Computation}) {Replica}},
	url = {https://www.instructables.com/CARDIAC-CARDboard-Illustrative-Aid-to-Computation-/},
	abstract = {CARDIAC (CARDboard Illustrative Aid to Computation) Replica: Back in the 1960's and early 70's Bell Labs made some very sophisticated educational kits available to high schools and colleges. Designed for classroom use, they included wonderful manuals written by some of Bell Labs best minds.  One of these kits…},
	language = {en},
	urldate = {2023-08-17},
	journal = {Instructables},
	author = {{megardi}},
	file = {Snapshot:/home/mrblue/Zotero/storage/Q6CAKDS2/CARDIAC-CARDboard-Illustrative-Aid-to-Computation-.html:text/html},
}

@book{ceruzzi_computing_2012,
	address = {Cambridge, Mass},
	series = {The {MIT} {Press} essential knowledge series},
	title = {Computing: a concise history},
	isbn = {978-0-262-51767-6},
	shorttitle = {Computing},
	publisher = {MIT Press},
	author = {Ceruzzi, Paul E.},
	year = {2012},
	note = {OCLC: ocn758392163},
	keywords = {Computer science, History},
}

@book{isaacson_innovators_2014,
	address = {New York},
	edition = {First Simon \& Schuster hardcover edition},
	title = {The innovators: how a group of hackers, geniuses, and geeks created the digital revolution},
	isbn = {978-1-4767-0869-0 978-1-4767-0870-6},
	shorttitle = {The innovators},
	abstract = {"Following his blockbuster biography of Steve Jobs, The Innovators is Walter Isaacson's revealing story of the people who created the computer and the Internet. It is destined to be the standard history of the digital revolution and an indispensable guide to how innovation really happens. What were the talents that allowed certain inventors and entrepreneurs to turn their visionary ideas into disruptive realities? What led to their creative leaps? Why did some succeed and others fail? In his masterly saga, Isaacson begins with Ada Lovelace, Lord Byron's daughter, who pioneered computer programming in the 1840s. He explores the fascinating personalities that cr eated our current digital revolution, such as Vannevar Bush, Alan Turing, John von Neumann, J.C.R. Licklider, Doug Engelbart, Robert Noyce, Bill Gates, Steve Wozniak, Steve Jobs, Tim Berners-Lee, and Larry Page. This is the story of how their minds worked and what made them so inventive. It's also a narrative of how their ability to collaborate and master the art of teamwork made them even more creative. For an era that seeks to foster innovation, creativity, and teamwork, The Innovators shows how they happen"--},
	publisher = {Simon \& Schuster},
	author = {Isaacson, Walter},
	year = {2014},
	keywords = {Computer science, History, Biography, BIOGRAPHY \& AUTOBIOGRAPHY / Science \& Technology, BUSINESS \& ECONOMICS / Industries / Computer Industry, Computer scientists, Internet, TECHNOLOGY \& ENGINEERING / History},
}

@misc{att_tech_channel_transistor_2015,
	title = {The {Transistor}: a 1953 documentary, anticipating its coming impact on technology},
	shorttitle = {The {Transistor}},
	url = {https://www.youtube.com/watch?v=V9xUQWo4vN0},
	abstract = {Made between the 1947 invention of the transistor at Bell Labs and the 1956 awarding of the Nobel Prize for Physics to its creators, this documentary is less about the discovery itself than its anticipated impact on technology and society. The intent of the film was clearly to give the public of that era their first understanding of what a transistor was and why it mattered so much.

Made for a general audience, the film provides a clear and concise presentation on technological developments that began with the vacuum tube, showing different types of transistors and explaining the significance in their ultimate replacement of tubes.

Included are visions of “things to come,” concepts and creations of how the small transistor might free up an encumbered world: the wrist radio, similar to Dick Tracy’s, but with a cool lapel sound speaker worn like a boutonniere; a portable TV set, which must have seemed astonishing at the time given the huge, heavy cabinetry required to accommodate the plethora of tubes inside 1950s TVs; and the “calculating machine,” or computer, whose size, we’re told, will one day be so reduced because of transistors that it will only require “a good-sized room” rather than a space the size of the Empire State Building. The concept of how small computers could be still remained decades away.

While The Transistor’s vision of the future seems somewhat quaint in retrospect, it captures a moment in time before the transistor became ubiquitous; a time when Bell Labs wanted the world to know that something important had occurred, something that was about to bring tremendous change to everyone’s daily lives.},
	urldate = {2023-08-18},
	author = {{AT\&T Tech Channel}},
	year = {2015},
}

@book{goldstine_computer_1972,
	address = {Princeton, N.J.},
	title = {The computer from {Pascal} to von {Neumann}},
	isbn = {978-0-691-08104-5},
	publisher = {Princeton University Press},
	author = {Goldstine, Herman Heine},
	year = {1972},
	keywords = {Computers, History},
}

@book{oregan_brief_2012,
	address = {London Heidelberg},
	edition = {2. ed},
	title = {A brief history of computing},
	isbn = {978-1-4471-2358-3},
	language = {eng},
	publisher = {Springer},
	author = {O'Regan, Gerard},
	year = {2012},
	annote = {Literaturverz. S. 257 - 259},
	file = {O'Regan - 2012 - A brief history of computing.pdf:/home/mrblue/Zotero/storage/VFD5W77F/O'Regan - 2012 - A brief history of computing.pdf:application/pdf},
}

@misc{noauthor_computer_nodate,
	title = {Computer {History}: {Dr}. {Konrad} {Zuse}, {Computer} {Pioneer} and the {Z} {Computers} ({Z3}) ({Germany} 1935-1945) - {YouTube}},
	url = {https://www.youtube.com/watch?v=6GSZQ9g-jiY},
	urldate = {2023-09-14},
	file = {Computer History\: Dr. Konrad Zuse, Computer Pioneer and the Z Computers (Z3) (Germany 1935-1945) - YouTube:/home/mrblue/Zotero/storage/XRYDMNKS/watch.html:text/html},
}

@misc{maurice_vincent_wilkes_edsac_1976,
	title = {{EDSAC} 1951},
	url = {https://www.youtube.com/watch?v=6v4Juzn10gM},
	abstract = {The work flow of writing an EDSAC computer programme, generating the programme paper tape, and the execution of the program are presented with narration.  If ever there was a compelling case for the creation of assemblers, compilers, and automated batch processing systems, this video is it.},
	urldate = {2023-09-14},
	author = {{Maurice Vincent Wilkes}},
	year = {1976},
}

@misc{computer_history_museum_univac_2008,
	title = {{UNIVAC} - {Information} {Age}: {Then} and {Now}},
	shorttitle = {{UNIVAC} - {Information} {Age}},
	url = {https://www.youtube.com/watch?v=h4wQJfdhOlU},
	abstract = {[Recorded 1960]
This humorous promotional film for the Remington Rand UNIVAC computer features J. Presper Eckert and John Mauchly in leading roles. Produced in 1960, the film outlines the earlier history of computing leading to the development and application of the UNIVAC computer.

J. Presper Eckert and John Mauchly, the major figures in the creation of the ENIAC computer, left the University of Pennsylvania's Moore School of Engineering at the end of WWII to found their own firm. They had hoped to be the first to exploit the new concept of the electronic stored program computer, but were hampered by a lack of funds and, to some extent, by the bureaucracy surrounding their only major customer, the Census Bureau. They sought other investors but never had enough to properly complete their projects. 

They eventually sold their business to Remington Rand (later Sperry Rand) who incorporated it as the UNIVAC division of the company. Eckert remained with UNIVAC all his life but Mauchly left after a few years to become a private consultant.

Remington Rand's Univac Division produced some of the earliest commercially available machines ahead of more famous firms such as IBM. The large management structure of the company often frustrated their engineers, many of whom left to found other very influential computer firms (e.g. Control Data Corporation). This bureaucracy is thought by many (including their Vice President, J. Presper Eckert) to have eventually limited their ability to take advantage of rapidly changing technology and to lose the lead to other firms such as IBM. 

In 1955 the Sperry Corporation and Remington Rand merged forming Sperry Rand. Sperry Rand then eventually merged with Burroughs to from Unisys and is still in business.

You can learn about computing history at the Computer History Museum website: www.computerhistory.org

Catalog number: 102639862},
	urldate = {2023-09-14},
	author = {{Computer History Museum}},
	year = {2008},
}

@article{richards_edsac_nodate,
	title = {{EDSAC} {Initial} {Orders} and {Squares} {Program}},
	url = {https://www.cl.cam.ac.uk/~mr10/Edsac/edsacposter.pdf},
	language = {en},
	journal = {University of Cambridge},
	author = {Richards, Martin},
	file = {Richards - EDSAC Initial Orders and Squares Program.pdf:/home/mrblue/Zotero/storage/C29XDFI8/Richards - EDSAC Initial Orders and Squares Program.pdf:application/pdf},
}

@book{salomon_assemblers_1992,
	address = {New York},
	series = {Ellis {Horwood} series in computers and their applications},
	title = {Assemblers and loaders},
	isbn = {978-0-13-052564-2},
	publisher = {Ellis Horwood},
	author = {Salomon, D.},
	year = {1992},
	keywords = {Assembling (Electronic computers), Loaders (Computer programs)},
	annote = {Includes index},
}

@misc{martin_campbell-kelly_tutorial_2021,
	title = {Tutorial {Guide} to the {EDSAC} {Simulator}},
	url = {https://www.dcs.warwick.ac.uk/~edsac/},
	language = {English},
	publisher = {The National Museum of Computing},
	author = {{Martin Campbell-Kelly}},
	month = dec,
	year = {2021},
	file = {EdsacTG.pdf:/home/mrblue/Documents/Proyectos/Tesis_MAC/Documentación/Investigacion/Documentos/EdsacTG.pdf:application/pdf},
}

@misc{computerphile_bootstrapping_2018,
	title = {Bootstrapping {EDSAC}: {Initial} {Orders} - {Computerphile}},
	shorttitle = {Bootstrapping {EDSAC}},
	url = {https://www.youtube.com/watch?v=nc2q4OOK6K8},
	abstract = {How did early computers like EDSAC deal with programs? Professor Brailsford on the code David Wheeler wrote to make people's life easier.

Our special thanks go to Professor Martin Campbell-Kelly for the simulator and advice.

If you want to play with the simulator, you can find it here: http://bit.ly/c\_EDSACSim 

https://www.facebook.com/computerphile
https://twitter.com/computer\_phile

This video was filmed and edited by Sean Riley.

Computer Science at the University of Nottingham: https://bit.ly/nottscomputer

Computerphile is a sister project to Brady Haran's Numberphile. More at http://www.bradyharan.com},
	urldate = {2023-09-17},
	author = {{Computerphile}},
	month = mar,
	year = {2018},
}

@misc{curiousmarc_ibm_2022,
	title = {The {IBM} 029 keypunch mechanical keyboard: insanely complicated!},
	shorttitle = {The {IBM} 029 keypunch mechanical keyboard},
	url = {https://www.youtube.com/watch?v=ZWLptl0cKSc},
	abstract = {I am repairing the mother of all mechanical keyboards: the IBM 029 keypunch keyboard. And when I say mechanical, I really mean it!

See a quick demo of my restored IBM 029 punch:    • 1964 IBM 029 Keypunch Card Punching D...  

Ken's blog article on how it works: http://www.righto.com/2017/12/repairi...

Our sponsors
- PCBWay: fast turn PCBs, https://www.pcbway.com
- Electro-Rent: https://www.electrorent.com
- Keysight: test instruments: https://www.keysight.com
- Samtec: connectors: https://www.samtec.com
- R\&D Microwaves: https://rdmicrowaves.com

Support the team on Patreon: https://www.patreon.com/curiousmarc
Buy our merch on Teespring: https://teespring.com/stores/curiousm...
Get more info on the companion site: https://www.curiousmarc.com
Contact info: https://www.youtube.com/curiousmarc/a...},
	urldate = {2023-09-17},
	author = {{CuriousMarc}},
	month = nov,
	year = {2022},
}

@misc{computerphile_5_2015,
	title = {5 {Hole} {Paper} {Tape} - {Computerphile}},
	url = {https://www.youtube.com/watch?v=JafQYA7vV6s},
	abstract = {Before floppy disks and the internet, computers transferred data to and from paper tape. Professor Brailsford explains.

Punch Card Programming:    • Punch Card Programming - Computerphile   
Mac at 30yrs Old:    • The Little Mac with the Big Bite - Co...  
Professor Steve Furber on ARM: COMING SOON! Subscribe for Updates 
Alan Turing and Enigma:    • Alan Turing and Enigma   

Professor Brailsford's notes: http://bit.ly/computerphile5holetape 

http://www.facebook.com/computerphile
https://twitter.com/computer\_phile

This video was filmed and edited by Sean Riley.

Computer Science at the University of Nottingham: http://bit.ly/nottscomputer

Computerphile is a sister project to Brady Haran's Numberphile. More at http://www.bradyharan.com},
	urldate = {2023-09-17},
	author = {{Computerphile}},
	month = mar,
	year = {2015},
}

@misc{curiousmarc_ibm_2018,
	title = {The {IBM} 1401 compiles and runs {FORTRAN} {II}},
	url = {https://www.youtube.com/watch?v=uFQ3sajIdaM},
	abstract = {We attempt to compile and run a simple FORTRAN program on our vintage 1959 IBM mainframe computer at the Computer History Museum. FORTRAN is a big stretch for this business oriented machine, with 16k memory and a CPU not meant at all for  scientific applications. Even integer multiply and divide instructions are  an optional feature on the base machine!  Success not guaranteed.

Come see the IBM 1401 computer at the Computer History Museum in Mountain View, California, USA:
https://computerhistory.org/exhibits/...

Simulation and programming environment available here: https://github.com/lucaseverini/ROPE. 

Mike Albaugh has made a page that explains how to run the same demonstration in the SIMH simulation: http://nulli.us/f1401/package.html

Some pointers on how to start programming the IBM 1401 on my website (work in progress): https://www.curiousmarc.com/computing...

Details on this implementation of FORTRAN: http://ibm-1401.info/1401-IBM-Systems...
IBM 1401 FORTRAN compiler source code: http://ibm-1401.info/1401-FORTRAN-Ill...
E-mail exchanges with the original developers of the IBM 1401 FORTRAN: http://ibm-1401.info/FORTRAN-e-mails....

Official CHM IBM 1401 Video:    • 1401: The Dawn of a New Era  

More CuriousMarc IBM 1401 videos:    • Debugging the 1959 IBM 729 Vacuum Col...  

Our sponsor for PCBs: https://www.pcbway.com
Support the team on Patreon: https://www.patreon.com/curiousmarc
Merch on Teespring: https://teespring.com/stores/curiousm...
Learn more on companion site: https://www.curiousmarc.com
Contact info: https://www.youtube.com/curiousmarc/a...},
	urldate = {2023-09-17},
	author = {{CuriousMarc}},
	month = feb,
	year = {2018},
}

@misc{noauthor_assembly_2023,
	title = {Assembly language},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Assembly_language&oldid=1175125060#Historical_perspective},
	abstract = {In computer programming,  assembly language (alternatively assembler language or symbolic machine code), often referred to simply as assembly and commonly abbreviated as ASM or asm, is any low-level programming language with a very strong correspondence between the instructions in the language and the architecture's machine code instructions. Assembly language usually has one statement per machine instruction (1:1), but  constants, comments, assembler directives, symbolic labels of, e.g., memory locations, registers, and macros are generally also supported.
The first assembly code in which a language is used to represent machine code instructions is found in Kathleen and Andrew Donald Booth's 1947 work, Coding for A.R.C.. Assembly code is converted into executable machine code by a utility program referred to as an assembler. The term "assembler" is generally attributed to Wilkes, Wheeler and Gill in their 1951 book The Preparation of Programs for an Electronic Digital Computer, who, however, used the term to mean "a program that assembles another program consisting of several sections into a single program". The conversion process is referred to as assembly, as in assembling the source code. The computational step when an assembler is processing a program is called assembly time.
Because assembly depends on the machine code instructions, each assembly language is specific to a particular computer architecture.Sometimes there is more than one assembler for the same architecture, and sometimes an assembler is specific to an operating system or to particular operating systems. Most assembly languages do not provide specific syntax for operating system calls, and most assembly languages can be used universally with any operating system, as the language provides access to all the real capabilities of the processor, upon which all system call mechanisms ultimately rest. In contrast to assembly languages, most high-level programming languages are generally portable across multiple architectures but require interpreting or compiling, much more complicated tasks than assembling.
In the first decades of computing, it was commonplace for both systems programming and application programming to take place entirely in assembly language.  While still irreplaceable for some purposes, the majority of programming is now conducted in higher-level interpreted and compiled languages.  In "No Silver Bullet", Fred Brooks summarised the effects of the switch away from assembly language programming: "Surely the most powerful stroke for software productivity, reliability, and simplicity has been the progressive use of high-level languages for programming. Most observers credit that development with at least a factor of five in productivity, and with concomitant gains in reliability, simplicity, and comprehensibility."Today, it is typical to use small amounts of assembly language code within larger systems implemented in a higher-level language, for performance reasons or to interact directly with hardware in ways unsupported by the higher-level language.  For instance, just under 2\% of version 4.9 of the Linux kernel source code is written in assembly; more than 97\% is written in C.},
	language = {en},
	urldate = {2023-09-17},
	journal = {Wikipedia},
	month = sep,
	year = {2023},
	note = {Page Version ID: 1175125060},
	file = {Snapshot:/home/mrblue/Zotero/storage/VSPBXGYZ/Assembly_language.html:text/html},
}

@misc{explainingcomputers_colossus_2017,
	title = {Colossus \& {Other} {Early} {Computers}},
	url = {https://www.youtube.com/watch?v=KkSxC9pFGZs},
	abstract = {The Colossus, EDSAC and Harwell Dekatron (WITCH) were some of the first electronic computers. In this video I check them out at the National Museum of Computing, along with an ICL 2966 mainframe from the 1980s.

This video was produced with the kind cooperation of the National Museum of Computing, who checked the script for factual accuracy. The museum is located at Bletchley Park in the UK, with its website at: http://www.tnmoc.org/

Note that my intertitle which says "Harwell Dekatron (WHICH)" contains a typo -- it should say "Harwell Dekatron (WITCH)". Sorry about this. :(

My second report from the National Museum of Computing -- looking at early PCs -- is here:    • Early PCs at the National Museum of C...  

If you enjoy these videos, you may also like my coverage of some early laptop and mobile computers: 

Toshiba 5100:    • Classic PC: Toshiba T5100  

Atari Portfolio:    • Classic PC: Atari Portfolio  

Apple Newton Messagepad:    • Classic PC: Newton MessagePad 110  

Psion 7:    • Classic PC: Psion 7  

More videos on computing-related topics can be found at:    / explainingcomputers  

You may also like my ExplainingTheFuture channel at:    / explainingthefuture},
	urldate = {2023-09-20},
	author = {{ExplainingComputers}},
	month = jun,
	year = {2017},
}

@book{sipser_introduction_2013,
	address = {Australia Brazil Japan Korea Mexiko Singapore Spain United Kingdom United States},
	edition = {Third edition, international edition},
	title = {Introduction to the theory of computation},
	isbn = {978-1-133-18781-3 978-1-133-18779-0 978-0-357-67058-3},
	language = {eng},
	publisher = {Cengage Learning},
	author = {Sipser, Michael},
	year = {2013},
	annote = {Literaturverzeichnis: Seite 443-447 Hier auch später erschienene, unveränderte Nachdrucke},
	file = {Table of Contents PDF:/home/mrblue/Zotero/storage/P3DUXDMD/Sipser - 2013 - Introduction to the theory of computation.pdf:application/pdf},
}

@book{hord_illiac_1982,
	address = {Berlin, Heidelberg},
	title = {The {Illiac} {IV}: the {First} {Supercomputer}},
	isbn = {978-3-662-10345-6},
	shorttitle = {The {Illiac} {IV}},
	abstract = {The Illiac IV was the first large scale array computer. As the fore­ runner of today's advanced computers, it brought whole classes of scientific computations into the realm of practicality. Conceived initially as a grand experiment in computer science, the revolutionary architecture incorporated both a high level of parallelism and pipe­ lining. After a difficult gestation, the Illiac IV became operational in November 1975. It has for a decade been a substantial driving force behind the develooment of computer technology. Today the Illiac IV continues to service large-scale scientific aoolication areas includ­ ing computational fluid dynamics, seismic stress wave propagation model­ ing, climate simulation, digital image processing, astrophysics, numerical analysis, spectroscopy and other diverse areas. This volume brings together previously published material, adapted in an effort to provide the reader with a perspective on the strengths and weaknesses of the Illiac IV and the impact this unique computa­ tional resource has had on the development of technology. The history and current status of the Illiac system, the design and architecture of the hardware, the programming languages, and a considerable sampling of applications are all covered at some length. A final section is devoted to commentary},
	language = {eng},
	publisher = {Springer Berlin Heidelberg},
	author = {Hord, R. Michael},
	year = {1982},
	note = {OCLC: 851370561},
}

@book{morley_understanding_2016,
	address = {Boston, MA},
	edition = {16th edition},
	title = {Understanding computers: today and tomorrow},
	isbn = {978-1-305-65631-4},
	shorttitle = {Understanding computers},
	publisher = {Cengage Learning},
	author = {Morley, Deborah},
	year = {2016},
}

@misc{computer_history_museum_computers_nodate,
	title = {Computers {\textbar} {Timeline} of {Computer} {History}},
	url = {https://www.computerhistory.org/timeline/computers/#169ebbe2ad45559efbc6eb3572083fb7},
	urldate = {2023-09-30},
	author = {{Computer History Museum}},
	file = {Computers | Timeline of Computer History | Computer History Museum:/home/mrblue/Zotero/storage/PN6N3ZVM/computers.html:text/html},
}

@book{valvano_introduction_2017,
	address = {s.l.},
	edition = {Fifth Edition},
	series = {Embedded systems / {Jonathan} {W}. {Valvano}},
	title = {Introduction to the {Arm}® {Cortex}({TM})-{M} {Microcontrollers}},
	isbn = {978-1-4775-0899-2},
	language = {eng},
	number = {1},
	publisher = {Eigenverl. d. Verf},
	author = {Valvano, Jonathan W. and Valvano, Jonathan W.},
	year = {2017},
}

@book{ifrah_universal_2001,
	address = {New York},
	title = {The universal history of computing: from the abacus to the quantum computer},
	isbn = {978-0-471-39671-0},
	shorttitle = {The universal history of computing},
	language = {eng},
	publisher = {John Wiley},
	author = {Ifrah, Georges},
	year = {2001},
	keywords = {Computers, History, Electronic data processing},
}

@misc{california_state_university_historical_nodate,
	title = {The {Historical} {Development} of {Computing}},
	url = {https://home.csulb.edu/~cwallis/labs/computability/index.html#Final},
	urldate = {2023-10-11},
	author = {{California State University}},
	file = {The Historical Development of Co:/home/mrblue/Zotero/storage/KZ92AVP9/index.html:text/html},
}

@article{eric_kim_ada_1999,
	title = {Ada and the {First} {Computer}},
	volume = {280},
	issn = {0036-8733},
	url = {https://www.scientificamerican.com/article/ada-and-the-first-computer},
	doi = {10.1038/scientificamerican0599-76},
	language = {en},
	number = {5},
	urldate = {2023-10-12},
	journal = {Scientific American},
	author = {Eric Kim, Eugene and Alexandra Toole, Betty},
	month = may,
	year = {1999},
	pages = {76--81},
	file = {Eric Kim and Alexandra Toole - 1999 - Ada and the First Computer.pdf:/home/mrblue/Zotero/storage/JCYPMHGN/Eric Kim and Alexandra Toole - 1999 - Ada and the First Computer.pdf:application/pdf},
}

@article{pawson_myth_2022,
	title = {The {Myth} of the {Harvard} {Architecture}},
	volume = {44},
	issn = {1934-1547},
	url = {https://ieeexplore.ieee.org/document/9779481/metrics#metrics},
	doi = {10.1109/MAHC.2022.3175612},
	abstract = {The label “Harvard architecture” has been applied to various computing devices where instructions and data are stored in separate memories. In the Harvard Mark III/IV the decision to separate the stores was motivated by a desire to optimize each form of storage, not by Aiken's oft-quoted antagonism toward “self-modifying code,” which was anyway not justified even at the time, and would become a liability with the emergence of operating systems. The term “Harvard architecture” was coined decades later, in the context of microcontroller design, retrospectively applied to the Harvard machines, and subsequently applied to RISC microprocessors with separated caches. The so-called “Harvard” and “von Neumann” architectures are often portrayed as a dichotomy, but the various devices labeled as the former have far more in common with the latter than they do with each other.},
	number = {3},
	urldate = {2023-10-18},
	journal = {IEEE Annals of the History of Computing},
	author = {Pawson, Richard},
	month = jul,
	year = {2022},
	note = {Conference Name: IEEE Annals of the History of Computing},
	pages = {59--69},
	file = {IEEE Xplore Abstract Record:/home/mrblue/Zotero/storage/MX8WNMUH/metrics.html:text/html},
}

@incollection{randell_preliminary_1982,
	address = {Berlin, Heidelberg},
	title = {Preliminary {Discussion} of the {Logical} {Design} of an {Electronic} {Computing} {Instrument}},
	isbn = {978-3-642-61814-7 978-3-642-61812-3},
	url = {http://link.springer.com/10.1007/978-3-642-61812-3_32},
	language = {en},
	urldate = {2023-10-19},
	booktitle = {The {Origins} of {Digital} {Computers}},
	publisher = {Springer Berlin Heidelberg},
	author = {Burks, Arthur W. and Goldstine, Herman H. and Neumann, John},
	editor = {Randell, Brian},
	year = {1982},
	doi = {10.1007/978-3-642-61812-3_32},
	pages = {399--413},
	file = {Burks et al. - 1982 - Preliminary Discussion of the Logical Design of an.pdf:/home/mrblue/Zotero/storage/YFT9F6XF/Burks et al. - 1982 - Preliminary Discussion of the Logical Design of an.pdf:application/pdf},
}

@misc{nasa_who_2020,
	title = {Who {Was} {Katherine} {Johnson}? ({Grades} {K}-4) - {NASA}},
	shorttitle = {Who {Was} {Katherine} {Johnson}?},
	url = {https://www.nasa.gov/learning-resources/for-kids-and-students/who-was-katherine-johnson-grades-k-4/},
	abstract = {Katherine Johnson loved math. Early in her career, she was called a “computer.” She helped NASA put an astronaut into orbit around Earth and on the moon.},
	language = {en-US},
	urldate = {2023-10-26},
	author = {{NASA}},
	month = feb,
	year = {2020},
	note = {Section: For Kids and Students},
	file = {Snapshot:/home/mrblue/Zotero/storage/PEVBEHQ3/who-was-katherine-johnson-grades-k-4.html:text/html},
}

@book{mark_jones_lorenzo_paper_2017,
	title = {The {Paper} {Computer} {Unfolded}: {A} {Twenty}-{First} {Century} {Guide} to the {Bell} {Labs} {CARDIAC} ({CARDboard} {Illustrative} {Aid} to {Computation}), the {LMC} ({Little} {Man} {Computer}), and the {IPC} ({Instructo} {Paper} {Computer})},
	isbn = {978-1-5374-2113-1},
	shorttitle = {The {Paper} {Computer} {Unfolded}},
	abstract = {From transistors to lasers, from radio astronomy to the solar battery cell, and from the C programming language to information theory, through much of the twentieth century Bell Telephone Laboratories was the birthplace of the future. But just as important as what the scientists and mathematicians at Bell Labs invented were their clever promotional efforts describing the nature of their work. For instance, in the 1960s Bell distributed self-promotional "advertisements" in the form of free scientific and technology kits to teachers and students in middle and high schools nationwide. One kit focused on transistors; another, on solar energy; and yet another, on crystals and light.},
	language = {English},
	publisher = {Createspace Independent Publishing Platform},
	author = {{Mark Jones Lorenzo}},
	month = aug,
	year = {2017},
}

@book{von_neumann_papers_1987,
	address = {Cambridge, Mass. : Los Angeles},
	series = {Charles {Babbage} {Institute} reprint series for the history of computing},
	title = {Papers of {John} von {Neumann} on computing and computer theory},
	isbn = {978-0-262-22030-9},
	number = {v. 12},
	publisher = {MIT Press ; Tomash Publishers},
	editor = {Aspray, William},
	collaborator = {Von Neumann, John and Burks, Arthur W.},
	year = {1987},
	keywords = {History, Electronic digital computers, Von Neumann, John},
	file = {Logical Design of an Electronic Computing Instrument.pdf:/home/mrblue/Documents/Proyectos/Tesis_MAC/Documentación/Investigacion/Documentos/Logical Design of an Electronic Computing Instrument.pdf:application/pdf},
}

@book{tanenbaum_structured_2013,
	address = {Boston Columbus Indianapolis New York San Francisco Upper saddle River Amsterdam Cape Town Dubai London Madrid Milan Munich},
	edition = {Sixth edition, international edition},
	series = {Always learning},
	title = {Structured computer organization},
	isbn = {978-0-273-76924-8},
	language = {eng},
	publisher = {Pearson},
	author = {Tanenbaum, Andrew S. and Austin, Todd and Chandavarkar, B. R.},
	year = {2013},
	annote = {Literaturverzeichnis: Seiten 659-668 Previous ed.: Upper Saddle River, N.J.: Pearson/Prentice Hall, 2006 "Authorized adaptation from the United States edition, entitled Structured Computer Organization, 6th edition, ISBN 978-0-13-291652-3 by Andrew S. Tanenbaum and Todd Austin" - Rückseite Titelblatt},
	file = {Table of Contents PDF:/home/mrblue/Zotero/storage/6PGASC5G/Tanenbaum et al. - 2013 - Structured computer organization.pdf:application/pdf;Tanenbaum, Andrew S_Austin, Todd - Structured computer organization-Pearson_ Langara College (2012_2017).pdf:/home/mrblue/Documents/Proyectos/Tesis_MAC/Documentación/Investigacion/Documentos/Tanenbaum, Andrew S_Austin, Todd - Structured computer organization-Pearson_ Langara College (2012_2017).pdf:application/pdf},
}

@misc{leslie_lamport_teaching_2009,
	title = {Teaching {Concurrency}},
	url = {https://lamport.azurewebsites.net/pubs/teaching-concurrency.pdf},
	language = {English},
	author = {{Leslie Lamport}},
	month = jan,
	year = {2009},
}

@misc{gadi_taubenfeld_concurrent_nodate,
	title = {Concurrent {Programming}, {Mutual} {Exclusion} (1965; {Dijkstra})},
	url = {https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=30e83735eb72af97e7ab3ec7f0823b9a9ae5493c},
	language = {English},
	publisher = {The Interdisciplinary Center, Herzliya, Israel},
	author = {{Gadi Taubenfeld}},
}

@article{leslie_lamport_computer_2015,
	title = {The {Computer} {Science} of {Concurrency}: {The} {Early} {Years}},
	url = {https://cacm.acm.org/magazines/2015/6/187316-turing-lecture-the-computer-science-of-concurrency/abstract},
	journal = {Communications of the ACM},
	author = {{Leslie Lamport}},
	month = jun,
	year = {2015},
	pages = {71--76},
}

@book{noauthor_introduction_2018,
	address = {New York, NY},
	title = {Introduction to parallel computing},
	isbn = {978-3-319-98832-0},
	publisher = {Springer Berlin Heidelberg},
	year = {2018},
	file = {2018 - Introduction to parallel computing.pdf:/home/mrblue/Zotero/storage/TEQNFYV9/2018 - Introduction to parallel computing.pdf:application/pdf},
}

@misc{amt_generacion_nodate,
	title = {La generación {Z}: {Konrad} {Zuse}, pionero alemán de la computación},
	shorttitle = {La generación {Z}},
	url = {https://alemaniaparati.diplo.de/mxdz-es/aktuelles/konradzuse/1087764},
	abstract = {Un sueño: una máquina que piense por nosotros. Aunque no las preguntas fundamentales, relacionadas con el universo o el origen y destino de las cosas y los seres; sino máquinas que realizaran de…},
	language = {es},
	urldate = {2024-05-02},
	journal = {Centro Alemán de Información para Latinoamérica},
	author = {Amt, Auswärtiges},
	file = {Snapshot:/home/mrblue/Zotero/storage/IVFPMZZK/1087764.html:text/html},
}
